name: 'Platform.sh Deploy status'
description: 'Detect if a platform.sh site has deployed successfully'
branding:
  icon: 'clock'
  color: 'purple'

inputs:
  PLATFORMSH_KEY:
    description: "API key for connecting to Platform.sh"
    required: true
    type: string

  PLATFORMSH_ID:
    description: "ID for the Platform.sh project."
    required: true
    type: string

  ENVIRONMENT_NAME:
    description: "Which environment to check against - defaults to pr-NUMBER"
    default: "pr-${{ github.event.pull_request.number }}"
    required: false
    type: string

  DEPLOY_STATUS_PATH:
    description: 'The location of the deploy-status file on the website.'
    default: '/sites/default/files/deploy-status'
    required: false
    type: string


outputs:
  status:
    description: 'Status information (Exists if fail)'

runs:
  using: "composite"
  steps:
    - uses: reload/action-platformsh-url@v2.0.2
      id: platformsh_url
      with:
        PLATFORMSH_ID: ${{ inputs.PLATFORMSH_ID }}
        PLATFORMSH_KEY: ${{ inputs.PLATFORMSH_KEY }}
    - name: Check latest deploy status
      shell: bash
      run: |
        set +e

        DEPLOY_STATUS_URL="${{ steps.platformsh_url.outputs.url }}${{ inputs.DEPLOY_STATUS_PATH }}"

        echo "Checking $DEPLOY_STATUS_URL .."

        CURL_HTTP_STATUS=$(curl -L -s -o /dev/null -w "%{http_code}" $DEPLOY_STATUS_URL)

        if [[ "$CURL_HTTP_STATUS" != "200" ]]; then \
          echo "Could not find the deploy-status file at $DEPLOY_STATUS_URL"; \
          echo "Did you remember to create during the build step in .platform.app.yaml?"; \
          echo "More info: https://github.com/reload/action-platformsh-deploy-status#the-deploy-status-file"; \
          exit 2; \
        fi

        CURL_STATUS=$(curl -L -s $DEPLOY_STATUS_URL)

        if [[ "$CURL_STATUS" != "1" ]]; then \
          echo "PlatformSH silently failed to deploy your PR."; \
          echo ""; \
          echo "You can view the deploy log with:"; \
          echo "$ platform log deploy -e ${{ inputs.ENVIRONMENT_NAME }} -p ${{ inputs.PLATFORMSH_ID }}"; \

          exit 2; \
        fi

        echo "PlatformSH successfully deployed your PR."
